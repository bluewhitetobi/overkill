version: '3'

services:
  rocketchat:
    image: rocketchat/rocket.chat:latest
#    restart: unless-stopped
    volumes:
      - /media/docker/rocketchat/uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
      - HTTP_PROXY=http://chat.meinedomain.de
      - HTTPS_PROXY=http://chat.meinedomain.de
    depends_on:
      - mongo
    ports:
      - 3000:3000
#    labels:
#      - "traefik.backend=rocketchat"
#      - "traefik.frontend.rule=Host: chat.homeitportal.de"
    labels:
      - "traefik.backend=rocketchat"
      - traefik.frontend.entryPoints=http,https
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:chat.meinedomain.de"
      - "traefik.port=3000"
      - "traefik.docker.network=traefik_proxy"

  mongo:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
     - /media/docker/rocketchat/db/data/db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0
    labels:
      - "traefik.enable=false"
  # this container's job is just run the command to initialize the replica set. it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:3.2
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - mongo
  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)

  hubot:
    image: rocketchat/hubot-rocketchat
    restart: unless-stopped
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=GENERAL
      - ROCKETCHAT_USER=bot
      - ROCKETCHAT_PASSWORD=botpassword
      - BOT_NAME=bot
  # you can add more scripts as you'd like here, they need to be installable by npm
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
    depends_on:
      - rocketchat
    labels:
      - "traefik.enable=false"
    volumes:
      - ./scripts:/home/hubot/scripts
  # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    ports:
      - 3001:8080

#  teamspeak:
#    image: teamspeak
#    restart: always
#    ports:
#      - 9987:9987/udp
#      - 10011:10011
#      - 30033:30033
#    volumes:
#     - /media/docker/teamspeak:/var/ts3server
#   environment:
#     TS3SERVER_LICENSE: accept
#
#    networks:
#      mynetwork:
#        aliases:
#          - teamspeak.docker.local


  sinusbot:
    image: sinusbot/docker
    restart: always
    ports:
      - 8087:8087
    volumes:
      - /media/docker/sinusbot/scripts:/opt/sinusbot/scripts
      - /media/docker/sinusbot/data:/opt/sinusbot/data
    labels:
      - "traefik.backend=sinusbot"
      - traefik.frontend.entryPoints=http,https
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:sinusbot.meinedomain.de"
      - "traefik.port=8087"
      - "traefik.docker.network=traefik_proxy"
#    networks:
#     - mynetwork
networks:
    mynetwork:
        driver: bridge

